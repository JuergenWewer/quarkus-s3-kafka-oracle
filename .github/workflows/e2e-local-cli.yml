e2e-local:
  runs-on: [self-hosted, linux]
  env:
    TESTCONTAINERS_IMAGE_PULL_POLICY: never   # keine Internet-Pulls
    TESTCONTAINERS_CHECKS_DISABLE: "true"
  steps:
    - uses: actions/checkout@v4

    - name: Install tools (zypper) – Podman statt Docker
      run: |
        sudo zypper -n refresh
        sudo zypper -n install --no-recommends \
          podman git maven java-17-openjdk-headless ca-certificates curl tar gzip which
        update-ca-certificates || true
        java -version; mvn -v; podman --version

    - name: Start Podman Docker-API (ohne systemd) & export DOCKER_HOST
      run: |
        set -e
        SOCK="$HOME/podman.sock"
        nohup podman system service --time=0 --log-level=error "unix://$SOCK" >/dev/null 2>&1 &
        for i in {1..30}; do [ -S "$SOCK" ] && break || sleep 1; done
        [ -S "$SOCK" ] || (echo "Podman socket not ready"; exit 1)
        echo "DOCKER_HOST=unix://$SOCK" >> "$GITHUB_ENV"

    - name: (Optional) Images lokal preloaden
      run: |
        # Beispiel: podman load -i /opt/images/confluentinc_cp-kafka_7.5.2.tar
        podman images || true

    - name: Build (package)
      run: mvn -B -ntp -DskipTests package

    - name: Run tests (Testcontainers → Podman via DOCKER_HOST)
      run: mvn -B -ntp test

    - name: Build & push image (Podman)
      env:
        REGISTRY: ${{ secrets.IMAGE_REGISTRY }}
        REPO:     ${{ secrets.IMAGE_REPO }}
        USERNAME: ${{ secrets.REGISTRY_USER }}
        PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      run: |
        set -euo pipefail
        IMAGE="${REGISTRY}/${REPO}:${GITHUB_SHA}"
        echo "$PASSWORD" | podman login "$REGISTRY" -u "$USERNAME" --password-stdin
        podman build -t "$IMAGE" .
        podman push "$IMAGE"
        echo "image=$IMAGE" >> "$GITHUB_OUTPUT"
